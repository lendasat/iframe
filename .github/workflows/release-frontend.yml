name: Release Frontends

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to be released (e.g., 1.0.0)'
        required: true
      ref:
        description: 'The branch, tag or SHA to checkout.'
        required: false
        default: 'main'

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{inputs.ref}}

      - uses: extractions/setup-just@v2

      - name: Install cargo-hack from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-edit
          version: '0.13.0'

      - name: Setup rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Bump hub version
        id: set-hub-version
        continue-on-error: true
        run: |
          cargo set-version --package hub ${{ github.event.inputs.version }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Commit version changes to tmp release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Release version ${{ github.event.inputs.version }}"

      - name: Release wallet
        run: just release-wallet

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Set Git Variables
        id: git-vars
        run: |
          echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Make .env file for Vite build
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_BORROWER_BASE_URL: "https://apiborrow.lendasat.com"
          envkey_VITE_LENDER_BASE_URL: "https://apilend.lendasat.com"
          envkey_VITE_BITCOIN_NETWORK: "bitcoin"
          envkey_VITE_MEMPOOL_REST_URL: "https://mempool.space"
          envkey_VITE_TELEGRAM_BOT_URL: "https://t.me/lendasatlendernotificationbot"
          envkey_VITE_TELEGRAM_BOT_NAME: "@lendasatlendernotificationbot"
          envkey_VITE_APP_GIT_COMMIT_HASH: ${{ env.GIT_COMMIT_HASH }}
          envkey_VITE_APP_GIT_TAG: ${{ github.event.inputs.version }}
          envkey_VITE_WEBSHOP_URL: "http://apishop.lendasat.com"
          envkey_VITE_WEBSHOP_POPUP_MAIN_URL: "https://popup.lendasat.com"
          envkey_VITE_WEBSHOP_POPUP_TEST_URL: "https://popupsignet.lendasat.com"
          envkey_VITE_POSTHOG_KEY: "phc_3MrZhmMPhgvjtBN54e9aDhV2iVAom8t3ocDizQxofyw"
          envkey_VITE_POSTHOG_HOST: "https://eu.i.posthog.com"

      - name: Build frontend
        run: just release-frontend

      - name: Push version changes to separate branch
        if: ${{ github.event.inputs.pr_main != 'true' }}
        run: |
          git checkout -b release-branch/${{ github.event.inputs.version }}
          git push origin release-branch/${{ github.event.inputs.version }}

      - name: Deploy lender frontend
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: pnpm
          workingDirectory: 'frontend'
          apiToken: ${{ secrets.CLOUDFLARE_SIGNET_TOKEN}}
          command: pages deploy apps/lender/dist/ --project-name=lendasat-lender

      - name: Deploy borrower frontend
        uses: cloudflare/wrangler-action@v3
        with:
          packageManager: pnpm
          workingDirectory: 'frontend'
          apiToken: ${{ secrets.CLOUDFLARE_SIGNET_TOKEN}}
          command: pages deploy apps/borrower/dist/ --project-name=lendasat-borrower

      - name: Compress frontend directory
        run: tar -czvf hub-frontend.tar.gz ./frontend/apps/borrower/dist ./frontend/apps/lender/dist

      - name: Copy ssh key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.PROD_VM_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Upload hub-frontend.tar.gz to server
        run: |
          scp -v -o StrictHostKeyChecking=no -i /.ssh/id_rsa ./hub-frontend.tar.gz ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}}:/home/${{secrets.PROD_VM_USERNAME}}/uploads/

      - name: Create hub-frontend.confirmed file on server
        run: |
          ssh -v -o StrictHostKeyChecking=no -i  /.ssh/id_rsa ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}} 'touch /home/${{secrets.PROD_VM_USERNAME}}/uploads/hub-frontend.confirmed'

