name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to be released (e.g., 1.0.0)'
        required: true
      pr_main:
        description: 'if true, a pr to merge into main will be created (e.g. true, false)'
        required: false
        default: 'true'

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extractions/setup-just@v2

      - name: Install cargo edit
        uses: stellar/binaries@v13
        with:
          name: cargo-edit
          version: 0.13.0

      - name: Setup rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - name: Bump hub version
        id: set-hub-version
        continue-on-error: true
        run: |
          cargo set-version --package hub ${{ github.event.inputs.version }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Commit version changes to tmp release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Release version ${{ github.event.inputs.version }}"

      - name: Release wallet
        run: just release-wallet

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: "frontend-monorepo/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend-monorepo
        run: npm ci

      - name: Make .env file for Vite build
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_BORROWER_BASE_URL: "https://borrow.lendasat.com"
          envkey_VITE_LENDER_BASE_URL: "https://lend.lendasat.com"
          envkey_VITE_BITCOIN_NETWORK: "bitcoin"
          envkey_VITE_MEMPOOL_REST_URL: "https://mempool.space"

      - name: Build frontend
        run: just release-frontend

      - name: Build the hub
        run: just release-hub


      - name: Push version changes to separate branch
        if: ${{ github.event.inputs.pr_main != 'true' }}
        run: |
          git checkout -b release-branch/${{ github.event.inputs.version }}
          git push origin release-branch/${{ github.event.inputs.version }}

      - name: Create Pull Request to merge into main
        if: ${{ github.event.inputs.pr_main == 'true' }}
        uses: peter-evans/create-pull-request@v7
        with:
          branch: release-branch/${{ github.event.inputs.version }}
          draft: false
          token: ${{ secrets.LENDASAT_GITHUB_ACTION_TOKEN }}
          base: main
          title: Merge back release changes from ${{ github.event.inputs.version }}
          body: |
            Changes in this PR have already been released. See https://github.com/lendasat/lendasat/releases
          labels: |
            automated pr

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
              target/release/hub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compress frontend directory
        run: tar -czvf hub-frontend.tar.gz ./frontend-monorepo/dist/

      - name: Copy ssh key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.PROD_VM_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Upload hub-frontend.tar.gz to server
        run: |
          scp -v -o StrictHostKeyChecking=no -i /.ssh/id_rsa ./hub-frontend.tar.gz ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}}:/home/${{secrets.PROD_VM_USERNAME}}/uploads/

      - name: Create hub-frontend.confirmed file on server
        run: |
          ssh -v -o StrictHostKeyChecking=no -i  /.ssh/id_rsa ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}} 'touch /home/${{secrets.PROD_VM_USERNAME}}/uploads/hub-frontend.confirmed'

      - name: Upload hub binary to server
        run: |
          scp -v -o StrictHostKeyChecking=no -i /.ssh/id_rsa ./target/release/hub ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}}:/home/${{secrets.PROD_VM_USERNAME}}/uploads/hub

      - name: Create hub.confirmed file on server
        run: |
          ssh -v -o StrictHostKeyChecking=no -i  /.ssh/id_rsa ${{secrets.PROD_VM_USERNAME}}@${{secrets.PROD_VM_SSH_HOST}} 'touch /home/${{secrets.PROD_VM_USERNAME}}/uploads/hub.confirmed'
