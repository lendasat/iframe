name: CI

on:
  pull_request:
  merge_group:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

permissions:
  actions: read
  contents: read

jobs:
  formatting-dprint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: dprint/check@v2.1

  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get all commits on current main
        run: git fetch origin main
      - name: Log all commits we will analyse
        run: git log --pretty=format:%s origin/main..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv squash!

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - name: Setup rust toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets --all-features -- -D warnings

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ clippy ]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - name: Setup rust toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
      - name: Running cargo tests
        run: RUST_BACKTRACE=1 just test-rust

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-monorepo
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extractions/setup-just@v2

      - name: Setup rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wallet
        run: just build-wallet

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: "frontend-monorepo/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build frontend
        run: just build-frontend

      - name: Lint frontend
        run: just lint-frontend

      - name: Run tests
        run: just test-frontend

      - name: Run e2e tests
        run: just e2e-tests-frontend
