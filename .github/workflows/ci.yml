name: CI

on:
  pull_request:
  merge_group:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

permissions:
  actions: read
  contents: read

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: dprint/check@v2.1
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Run frontend prettier
        working-directory: frontend
        run: |
          node --version
          pnpm --version
          pnpm install --filter="@frontend/root"
          pnpm exec prettier --write "**/*.{ts,tsx,md}"

  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get all commits on current main
        run: git fetch origin main
      - name: Log all commits we will analyse
        run: git log --pretty=format:%s origin/main..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv squash!

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - name: Setup rust toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets --all-features -- -D warnings

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ clippy ]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - name: Setup rust toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
      - name: Running cargo tests
        run: RUST_BACKTRACE=1 just test-rust

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [ clippy ]
    steps:
      - uses: actions/checkout@v4

      - uses: extractions/setup-just@v2

      - name: Set up Rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - name: Create seed file
        run: echo "super-secure-seed" > test-seed

      - name: Make .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SEED_FILE: "./test-seed"
          envkey_FALLBACK_XPUB: "tpubD6NzVbkrYhZ4YRwqdJt3gfhyeAndFq8LBzR3H6FZRHsaceWk6RB4CBeEmWMfptREDEBZef6cKQ37ZFpkpX4dxtv48GjiHsZ8JDegfNzRz6G"
          envkey_HUB_FEE_DESCRIPTOR: "wpkh(tpubD6NzVbkrYhZ4YRwqdJt3gfhyeAndFq8LBzR3H6FZRHsaceWk6RB4CBeEmWMfptREDEBZef6cKQ37ZFpkpX4dxtv48GjiHsZ8JDegfNzRz6G)#2g9gvjz5"
          envkey_DB_URL: "postgres://hub:supersecretpassword@localhost:5559/hub"
          envkey_JWT_SECRET: "my_ultra_secure_secret"
          envkey_NETWORK: "regtest"
          envkey_MOON_API_KEY: "api-key"
          envkey_MOON_API_URL: "https://example.com"
          envkey_MOON_VISA_PRODUCT_ID: "4155e9b9-4a94-4894-acd8-90c728bd14e7"
          envkey_MOON_WEBHOOK_URL: "https://example.com"
          envkey_MOON_CARD_TOPUP_FEE: 0.01
          envkey_HUB_ORIGINATION_FEE: "0,100,1"
          envkey_HUB_EXTENSION_ORIGINATION_FEE: "0,100,1"
          envkey_BORROWER_LISTEN_ADDRESS: "0.0.0.0:7337"
          envkey_BORROWER_FRONTEND_ORIGIN: "http://localhost:7337"
          envkey_LENDER_LISTEN_ADDRESS: "0.0.0.0:7338"
          envkey_LENDER_FRONTEND_ORIGIN: "http://localhost:7338"
          envkey_SIDESHIFT_SECRET: "private_key"
          envkey_SIDESHIFT_AFFILIATE_ID: "affiliate_id"
          envkey_SIDESHIFT_API_BASE_URL: "https://example.com"
          envkey_SIDESHIFT_COMMISSION_RATE: 0
          envkey_BRINGIN_URL: "https://dev.bringin.xyz/api/v0"
          envkey_BRINGIN_API_SECRET: "secret"
          envkey_BRINGIN_API_KEY: "key"
          envkey_BRINGIN_WEBHOOK_URL: "https://webhook.site/0be287da-5ac6-4e99-b6fb-d5e26ac3e6b3"
          envkey_ETHERSCAN_API_KEY: "key"
          envkey_FALLBACK_NPUB: "npub1z774umv05tcwd8xxl0ftxs7muk7u9vqhqyglqz3e82wqr4w0m2uqlz05cf"
          envkey_BTSIEVE_SYNC_INTERVAL: 1
          envkey_ESPLORA_URLS: "http://localhost:7339/api"
          file_name: .env

      - name: Show disk space before test run
        if: always()
        run: df -h

      - name: Prepare e2e test environment
        run: just prepare-e2e

      - name: Run e2e test
        # We run the tests in sequence to avoid spurious errors.
        run: cargo test -p tests-e2e -- --ignored --test-threads=1

      - name: Show hub logs if test run fails
        if: failure()
        run: cat hub.log

      - name: Show mempool-mock logs if test run fails
        if: failure()
        run: cat mempool.log

      - name: Show Postgres logs if test run fails
        if: failure()
        run: docker logs postgres

      - name: Show disk space after test run
        if: always()
        run: df -h

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: extractions/setup-just@v2

      - name: Setup rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build wallet
        run: just build-wallet

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: just build-frontend

      - name: Check frontend
        run: just check-frontend
      - name: Lint frontend
        run: just lint-frontend
